apply plugin: 'java'

ext {
    ANTLR_SRC = "src/main/antlr"
    GEN_JS_SRC = "src/main-generated/javascript"
}

repositories {
    jcenter()
}
dependencies {
    runtime 'org.antlr:antlr4:4.8'
}

task compileTypeScriptAndPack(type: Exec) {
    dependsOn "generateParser"

    executable "sh"
    args "-c", "npm install && npx tsc && npx webpack"
}

task generateLexer(type: JavaExec) {
    def lexerName = "GraqlLexer"
    inputs.file("$ANTLR_SRC/Graql.g4")
    outputs.file("$GEN_JS_SRC/${lexerName}.js")
    outputs.file("$GEN_JS_SRC/${lexerName}.interp")
    outputs.file("$GEN_JS_SRC/${lexerName}.tokens")
    main = 'org.antlr.v4.Tool'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-Dlanguage=JavaScript', "Graql.g4", '-o', '../../main-generated/javascript']
    workingDir = ANTLR_SRC
}

task generateParser(type: JavaExec) {
    dependsOn generateLexer
    def lexerName = "GraqlLexer"
    def parserName = "GraqlParser"
    inputs.file("$ANTLR_SRC/Graql.g4")
    inputs.file("$GEN_JS_SRC/${lexerName}.tokens")
    outputs.file("$GEN_JS_SRC/${parserName}.js")
    outputs.file("$GEN_JS_SRC/${parserName}.interp")
    outputs.file("$GEN_JS_SRC/${parserName}.tokens")
    main = 'org.antlr.v4.Tool'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-Dlanguage=JavaScript', "Graql.g4", '-no-listener', '-no-visitor', '-o', '../../main-generated/javascript']
    workingDir = ANTLR_SRC
}

task testJavaScript(type: Exec) {
    shouldRunAfter("compileTypeScriptAndPack")

    executable "sh"
    args "-c", "npm test"
}
test.dependsOn("testJavaScript")